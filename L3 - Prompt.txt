When would you want to create a remote repository rather than keeping all your work local?
  
  When I have made the necessary commits and changes to my file and want to host it elsewhere, for reasons such as collaboration and file storage. Github is a reosurce that would allow local work to be shared more beneficially for projects.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
  
  Because sometimes not all commits make the most logical sense to group, and multiple pulls would be redundant to the file, as some commits might be smaller than others. Pull changes manually would solve this by allowing you to choose when to pull requests.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	
  Branches are different chain of commits made from a master branch, when a couple of tweaks or changes are needed for the commit but not an entire change to the branch. Cloning just copies a whole repository from local to local or from a site like github to local. Fork is strictly Github to Github cloning.

What is the benefit of having a copy of the last known state of the remote stored locally?

  Having a copy of the last known state of the remote stored locally would allow for instant easy and local access, i.e in an offline environment, to the remote in which Iâ€™d be able to make any commits or changes to the file, or otherwise merge them. 

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

  Using Git & Github would make collaboration easier by allow certain files to be changed either individually, by forking other projects and working in the local repository offline, or allow one file to be modified by other users collectively. What would be hard about such a task would be the amount of collaborators, and the number of branches/commits that would be made on a file. Too many from too many collaborators would result in conflicts within the original source of the file.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

  Making changes on a separate branch would be more beneficial to creating different edits, tweaks or changes from the master, so that the core structure of the file will not be altered until you merge it with the master branch. This way you can see alternate versions of your project without altering the master in any way.
